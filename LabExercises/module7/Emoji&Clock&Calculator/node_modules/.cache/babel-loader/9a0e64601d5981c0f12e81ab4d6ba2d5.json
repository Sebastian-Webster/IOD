{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianwebster/IOD_FOLDER/LabExercises/module7/Emoji&Clock&Calculator/src/components/RenderEmoji.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useContext, useState } from 'react';\nimport { CurrentEmojiContext, EmojiListContext } from './context/EmojiContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RenderEmojiClass extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(EmojiListContext.Consumer, {\n      children: emojiList => /*#__PURE__*/_jsxDEV(CurrentEmojiContext.Consumer, {\n        children: _ref => {\n          let {\n            currentEmoji,\n            setCurrentEmoji\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: emojiList[currentEmoji]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (currentEmoji + 1 > emojiList.length - 1) setCurrentEmoji(0);else setCurrentEmoji(currentEmoji + 1);\n              },\n              children: \"Go to the next emoji\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction RenderEmojiFunction() {\n  _s();\n\n  const emojiList = useContext(EmojiListContext);\n  const {\n    currentEmoji,\n    setCurrentEmoji\n  } = useContext(CurrentEmojiContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: emojiList[currentEmoji]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (currentEmoji + 1 > emojiList.length - 1) setCurrentEmoji(0);else setCurrentEmoji(currentEmoji => currentEmoji + 1);\n      },\n      children: \"Go to the next emoji\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(RenderEmojiFunction, \"MqvZtYm62fV/HmVGP5pMUnvcFkA=\");\n\n_c = RenderEmojiFunction;\nexport { RenderEmojiClass, RenderEmojiFunction };\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderEmojiFunction\");","map":{"version":3,"names":["React","Component","useContext","useState","CurrentEmojiContext","EmojiListContext","RenderEmojiClass","constructor","props","render","emojiList","currentEmoji","setCurrentEmoji","length","RenderEmojiFunction"],"sources":["/Users/sebastianwebster/IOD_FOLDER/LabExercises/module7/Emoji&Clock&Calculator/src/components/RenderEmoji.js"],"sourcesContent":["import React, {Component, useContext, useState} from 'react';\nimport { CurrentEmojiContext, EmojiListContext } from './context/EmojiContext';\n\nclass RenderEmojiClass extends Component {\n    constructor(props) {\n      super(props)\n    }\n\n    render() {\n      return (\n        <EmojiListContext.Consumer>\n          {emojiList => (\n            <CurrentEmojiContext.Consumer>\n              {({currentEmoji, setCurrentEmoji}) => (\n                <div>\n                  <h1>{emojiList[currentEmoji]}</h1>\n                  <button\n                    onClick={() => {\n                      if (currentEmoji + 1 > emojiList.length - 1) setCurrentEmoji(0)\n                      else setCurrentEmoji(currentEmoji + 1)\n                    }}\n                  >\n                    Go to the next emoji\n                  </button>\n                </div>\n              )}\n            </CurrentEmojiContext.Consumer>\n          )}\n        </EmojiListContext.Consumer>\n      )\n    }\n}\n\nfunction RenderEmojiFunction() {\n    const emojiList = useContext(EmojiListContext)\n    const {currentEmoji, setCurrentEmoji} = useContext(CurrentEmojiContext)\n\n    return(\n      <div>\n        <h1>{emojiList[currentEmoji]}</h1>\n        <button\n          onClick={() => {\n            if (currentEmoji + 1 > emojiList.length - 1) setCurrentEmoji(0)\n            else setCurrentEmoji(currentEmoji => currentEmoji + 1)\n          }}\n        >\n          Go to the next emoji\n        </button>\n      </div>\n    )\n}\n\nexport {RenderEmojiClass, RenderEmojiFunction}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,wBAAtD;;;AAEA,MAAMC,gBAAN,SAA+BL,SAA/B,CAAyC;EACrCM,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;EACD;;EAEDC,MAAM,GAAG;IACP,oBACE,QAAC,gBAAD,CAAkB,QAAlB;MAAA,UACGC,SAAS,iBACR,QAAC,mBAAD,CAAqB,QAArB;QAAA,UACG;UAAA,IAAC;YAACC,YAAD;YAAeC;UAAf,CAAD;UAAA,oBACC;YAAA,wBACE;cAAA,UAAKF,SAAS,CAACC,YAAD;YAAd;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cACE,OAAO,EAAE,MAAM;gBACb,IAAIA,YAAY,GAAG,CAAf,GAAmBD,SAAS,CAACG,MAAV,GAAmB,CAA1C,EAA6CD,eAAe,CAAC,CAAD,CAAf,CAA7C,KACKA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;cACN,CAJH;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QADD;QAAA;MADH;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA,QADF;EAqBD;;AA3BoC;;AA8BzC,SAASG,mBAAT,GAA+B;EAAA;;EAC3B,MAAMJ,SAAS,GAAGR,UAAU,CAACG,gBAAD,CAA5B;EACA,MAAM;IAACM,YAAD;IAAeC;EAAf,IAAkCV,UAAU,CAACE,mBAAD,CAAlD;EAEA,oBACE;IAAA,wBACE;MAAA,UAAKM,SAAS,CAACC,YAAD;IAAd;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,OAAO,EAAE,MAAM;QACb,IAAIA,YAAY,GAAG,CAAf,GAAmBD,SAAS,CAACG,MAAV,GAAmB,CAA1C,EAA6CD,eAAe,CAAC,CAAD,CAAf,CAA7C,KACKA,eAAe,CAACD,YAAY,IAAIA,YAAY,GAAG,CAAhC,CAAf;MACN,CAJH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaH;;GAjBQG,mB;;KAAAA,mB;AAmBT,SAAQR,gBAAR,EAA0BQ,mBAA1B"},"metadata":{},"sourceType":"module"}